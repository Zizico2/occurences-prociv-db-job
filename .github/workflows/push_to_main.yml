name: "Test Suite"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUSTFLAGS: "-Dwarnings"
  # TODO: shouldn't need these env vars. should use neon branch
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
  POSTGRES_DB: db
  POSTGRES_PORT: 5432

jobs:
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test --all-features
  formatting:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - uses: actions-rust-lang/rustfmt@v1

  clippy_check:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo clippy --workspace --tests --all-targets --all-features

  sqlx_prepare_check:
    name: cargo sqlx prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo install sqlx-cli --no-default-features --features rustls,postgres
      # TODO: should use neon branch
      - run: docker run -d -p ${{ env.POSTGRES_PORT }}:${{ env.POSTGRES_PORT }} -e POSTGRES_USER=${{ env.POSTGRES_USER }} -e POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} -e POSTGRES_DB=${{ env.POSTGRES_DB }} postgis/postgis:latest
      - run: cargo sqlx migrate run
        env:  
          DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}
      - run: cargo sqlx prepare --workspace --check -- --all-targets --all-features
        env:  
          DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}
